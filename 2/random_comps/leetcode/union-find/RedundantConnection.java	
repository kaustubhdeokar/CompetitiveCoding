public class RedundantConnection{
     public int[] findRedundantConnection(int[][] edges) {
        int[] parent = new int[edges.length+1];
        int[] rank = new int[edges.length+1];
        
        for(int i=1;i<=edges.length;i++){
            parent[i] = i;
        }
        
        int[] answer = new int[2];
        
        for(int i=0;i<edges.length;i++)
        {
            int x = edges[i][0];
            int y = edges[i][1];
            
            int xParent = find(parent, x);
            int yParent = find(parent, y);
            
            if(xParent == yParent){
                answer[0] = edges[i][0];
                answer[1] = edges[i][1];
            }
            
            if(rank[xParent]>rank[yParent]){
                parent[yParent] = xParent;
                rank[xParent]+=1;
            }
            else{
                parent[xParent] = yParent;
                rank[yParent]+=1;
            }
        }
        
        return answer;
    }
    
    public int find(int[] parent, int x){
        if(parent[x] == x)
            return x;
        parent[x] = find(parent, parent[x]);
        return parent[x];
    }
}